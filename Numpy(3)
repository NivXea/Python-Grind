/// Indexing & Slicing ///
______________________________________________________________________________________________________________________________________________________________________________________________
import numpy as np

arr = np.array([10,20,30,40,50])

print(arr[0]) --> 10 , #This is Indexing in arrays, Same as Python Lists..

print(arr[1:3] -> [20 30] #This is Slicing in arrays, Same As Python List Slicing..

#NOTE: We can add a negative step (-1) such that The Slicing takes place in reverse order arr[::-1]

______________________________________________________________________________________________________________________________________________________________________________________________
// Fancy Indexing
import numpy as np

arr = np.array([10,20,30,40,50])

print(arr[[0,1,4]]) ---> [10 20 40]
NOTE: While using fancy indexing , remember to pass your indexing data as a list , arr[[list of index which you want]]..
____________________________________________________________________________________________________________________________________________________________________________________________
// Boolean Masking or Filtering Data on the Basis of Conditions(array[condition])
import numpy as np

arr = np.array([10,20,30,40,50])

print(arr[arr>25]) --> [ 30 40 50 ]
NOTE: Here [arr > 25 ] is the condition and each element inside an array is reffered as the name of the array..
___________________________________________________________________________________________________________________________________________________________________________________________
// Reshaping And Manipulating Arrays
Reshaping -> Changing the dimension(shape) of an array without modifying the data inside.
Its Syntax -> array.reshape(rows,column) only if dimension remains same or Rows*Column = No of elements..
import numpy as np

arr = np.array([1,2,3,4,5,6])

reshaped_Arr = arr.reshape(2,3)

print(reshaped_Arr) --> [ [1 2 3],
                          [4 5 6] ]

      





